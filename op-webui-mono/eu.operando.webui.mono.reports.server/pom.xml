<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.operando.webui</groupId>
	<artifactId>eu.operando.webui.mono.reports.server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>eu.operando.webui.mono.reports.server</name>
	<url>http://maven.apache.org</url>
	<build>
		<plugins>
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.13.9</version> <!-- last version in https://mvnrepository.com/artifact/org.jolokia/docker-maven-plugin -->
				<configuration>
					<images>
						<image>
							<alias>${project.artifactId}</alias>
							<name>${docker.repository.name}:${project.version}</name>
							<build>
								<assembly>
									<!-- this time we will do it from a docker file element is needed 
										to switch the usage of the extrenal file -->
									<dockerFileDir>.</dockerFileDir>
									<!-- end -->
								</assembly>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<env>
								</env>
								<ports>
									<port>${docker.mono.port}:8084</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
			<!-- added to support initial database creation -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<!-- specify the dependent JDBC driver here -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.0.8</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.dbname}</url>
					<username>root</username>
					<password>root</password>
				</configuration>
				<executions>
					<execution>
						<id>default-cli</id>
						<phase>initalize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<!-- specific configuration for this execution -->
						<configuration>
							<!-- specify your SQL commands, can be all of the following configurations -->
							<srcFiles>
								<srcFile>src/main/sql/operando_data.sql</srcFile>
								<srcFile>src/main/sql/operando_report.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end of addition -->
		</plugins>
	</build>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.registry.name>localhost:5000/</docker.registry.name><!-- leave 
			empty for docker hub; use e.g. "localhost:5000/" for a local docker registry -->
		<docker.repository.name>${docker.registry.name}tecnalia/${project.artifactId}</docker.repository.name>
		<docker.mono.port>8122</docker.mono.port>
		<mysql.host>localhost</mysql.host>
        <mysql.port>3306</mysql.port>		
	</properties>
	<profiles>
		<profile>
			<id>jenkins-dev</id>
			<activation>
				<property>
					<name>ci</name>
				</property>
			</activation>
			<properties>
	        	<mysql.host>mysql.integration.operando.dmz.lab.esilab.org</mysql.host>
			</properties>
		</profile>
	</profiles>
</project>
