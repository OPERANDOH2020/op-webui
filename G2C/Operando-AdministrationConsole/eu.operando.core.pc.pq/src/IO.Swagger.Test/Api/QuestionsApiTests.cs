/* 
 * Privacy Questionairre API
 *
 * A set of methods to manage privacy quesions.   Privacy questions are generated to form a questionairre that can be displayed to the user. The answers to these questions form a privacy sensitivity index.  For an individual service (OSP) a set of questions can be generated  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@operando.eu
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing QuestionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class QuestionsApiTests
    {
        private QuestionsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new QuestionsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of QuestionsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' QuestionsApi
            //Assert.IsInstanceOfType(typeof(QuestionsApi), instance, "instance is a QuestionsApi");
        }

        
        /// <summary>
        /// Test QuestionsUserIdOspIdGet
        /// </summary>
        [Test]
        public void QuestionsUserIdOspIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //string ospId = null;
            //string language = null;
            //var response = instance.QuestionsUserIdOspIdGet(userId, ospId, language);
            //Assert.IsInstanceOf<List<Questionobject>> (response, "response is List<Questionobject>");
        }
        
        /// <summary>
        /// Test QuestionsUserIdOspIdPost
        /// </summary>
        [Test]
        public void QuestionsUserIdOspIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userId = null;
            //List<Questionobject> upp = null;
            //var response = instance.QuestionsUserIdOspIdPost(userId, upp);
            //Assert.IsInstanceOf<List<Answerobject>> (response, "response is List<Answerobject>");
        }
        
    }

}
