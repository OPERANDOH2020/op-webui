@model Operando_AdministrationConsole.Models.AccessPolicyModel


@{
    Layout = "~/Views/Shared/_LayoutOperando.cshtml";
}
<div class="row">
    <div class="col-xs-12">
        <div class="portlet light bordered">
            <div class="portlet-title tabbable-line">
                <div class="caption">
                    <i class="icon-globe font-dark hide"></i>
                    <span class="caption-subject font-dark bold uppercase"> OSP Policy</span>
                </div>
            </div>
            <div class="portlet-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Edit AccessPolicy</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Permission)
                                    @Html.ValidationMessageFor(model => model.Permission, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.RawResource, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @Html.Label("Resource", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RawResource, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RawResource, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @Html.Label("Subject", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RawSubject, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RawSubject, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.OspPolicyId)
                        @Html.HiddenFor(model => model.Subject)

                        @*
                        <div class="form-group">
                            @Html.LabelFor(model => model.OspPolicyId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OspPolicyId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OspPolicyId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                          *@  

                        <div class="form-group">
                            @Html.Label("Friendly name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Resource, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Resource, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*
                        <div class="form-group">
                            @Html.LabelFor(model => model.Resource, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Resource, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Resource, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Action, new SelectList(ViewBag.ActionList), "-Please select-", new { @class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*
                        <div class="form-group">
                            @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            
                        <div class="form-group">
                            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.categoryList), "-Please select-", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Tooltip, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Tooltip, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Tooltip, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.TooltipReason)
                        @*
                        <div class="form-group">
                            @Html.LabelFor(model => model.TooltipReason, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TooltipReason, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TooltipReason, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            *@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Fixed, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Fixed)
                                    @Html.ValidationMessageFor(model => model.Fixed, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.Reason)

                        @*
                        <div class="form-group">
                            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            *@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("OspAdmin", "UpdateOspPolicy")
                </div>
            </div>
        </div>
    </div>
</div>

